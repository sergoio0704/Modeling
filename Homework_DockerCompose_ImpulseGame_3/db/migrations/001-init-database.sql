CREATE TABLE IF NOT EXISTS file (
    id_file INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS account (
    id_account INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    pass VARCHAR(100) NOT NULL,
    name VARCHAR(255) NOT NULL,
    id_avatar INT,
	CONSTRAINT FK_account_file FOREIGN KEY(id_avatar)
    REFERENCES file(id_file)
    ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS role (
    id_role SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    name VARCHAR(30) NOT NULL
);

CREATE TABLE IF NOT EXISTS account_role (
    id_account INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    id_role SMALLINT NOT NULL,
    PRIMARY KEY (id_account, id_role),
    CONSTRAINT FK_account_role_account FOREIGN KEY (id_account)
    REFERENCES account(id_account)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS game_type (
    id_game_type SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    url VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS complexity (
    id_complexity SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    complexity_kind SMALLINT NOT NULL
);

CREATE TABLE IF NOT EXISTS game (
    id_game INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    id_game_type SMALLINT NOT NULL,
    id_complexity SMALLINT NOT NULL,
    id_file INT,
    CONSTRAINT FK_game_game_type FOREIGN KEY (id_game_type)
    REFERENCES game_type(id_game_type)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    CONSTRAINT FK_game_file FOREIGN KEY (id_file)
    REFERENCES file(id_file)
    ON DELETE SET NULL,
    CONSTRAINT FK_game_complexity FOREIGN KEY (id_complexity)
    REFERENCES complexity(id_complexity)
);

CREATE TABLE IF NOT EXISTS game_result (
    id_game_result BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    id_account INT NOT NULL,
    id_game SMALLINT  NOT NULL,
    quantity_tasks INT NOT NULL,
    quantity_true_answers INT NOT NULL,
    CONSTRAINT FK_game_result_game FOREIGN KEY (id_game)
    REFERENCES game(id_game)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    CONSTRAINT FK_game_result_account FOREIGN KEY (id_account)
    REFERENCES account(id_account)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);
